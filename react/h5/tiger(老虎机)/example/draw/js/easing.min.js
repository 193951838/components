const { number } = require("prop-types");

jQuery.easing.jswing = jQuery.easing.swing;
jQuery.extend(jQuery.easing, {
  def: "easeOutQuad",
  easeInOutCirc: function(e, f, a, h, g) {
    if ((f /= g / 2) < 1) {
      return (-h / 2) * (Math.sqrt(1 - f * f) - 1) + a;
    }
    return (h / 2) * (Math.sqrt(1 - (f -= 2) * f) + 1) + a;
  }
});

let sequence = 0; //当前次数序列
jQuery.fn.extend({
  slots: function({ boxH, random, end, circle, num }) {
    let height = parseFloat(boxH);
    sequence++;
    console.log(
      document.getElementsByTagName("html")[0].style.fontSize,
      window.devicePixelRatio
    );
    $(this).each(function(e) {
      var f = $(this);
      setTimeout(function() {
        const deg = height * num * circle * sequence - random[e] * height;
        if (isNaN(deg)) return;
        f.animate(
          { backgroundPositionY: (deg + height / 3) / 75 + "rem" },
          {
            duration: 8000 + e * 3000,
            easing: "easeInOutCirc",
            complete: function() {
              if (e == random.length - 1) {
                end();
              }
            }
          }
        );
      }, e * 300);
    });
  }
});
